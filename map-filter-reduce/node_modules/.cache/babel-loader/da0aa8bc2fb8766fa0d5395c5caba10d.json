{"ast":null,"code":"// var numbers = [3, 56, 2, 48, 5];\n//Map -Create a new array by doing something with each item in an array.\n// function double(x) {\n//   return x * 2;\n// }\n// const newNumbers = numbers.map(double);\n// var newNumbers = [];\n// numbers.forEach(function (x) {\n//   newNumbers.push(x * 2);\n// });\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n// console.log(newNumbers);\n//Filter - Create a new array by keeping the items that return true.\n// const newNumbers = numbers.filter(function (num) {\n//  return num < 10\n// });\n// var newNumbers = [];\n// numbers.forEach(function (num) {\n//   if(num < 10) {\n//     newNumbers.push(num);\n//   }\n// });\n// console.log(newNumbers);\n//Reduce - Accumulate a value by doing something to each item in an array.\n// var newNumber = numbers.reduce(function (accumulator, currentNumber) {\n//   console.log(\"accumulator = \" + accumulator);\n//   console.log(\"currentNumber = \" + currentNumber);\n//   return accumulator + currentNumber;\n// });\n// var newNumber = 0;\n// numbers.forEach(function(currentNumber) {\n//   newNumber += currentNumber\n// });\n// console.log(newNumber);\n//Find - find the first item that matches from an array.\n// const newNumber = numbers.find(function (num) {\n//   return num > 10;\n// });\n// console.log(newNumber);\n//FindIndex - find the index of the first item that matches.\n// const newNumber = numbers.findIndex(function(num) {\n//   return num > 10;\n// });\n// console.log(newNumber);\n//Challange\nimport emojipedia from \"./emojipedia\";\nvar newEmojipedia = emojipedia.map(function (emojiEntry) {\n  return emojiEntry.meaning.substring(0, 100);\n});\nconsole.log(newEmojipedia);","map":{"version":3,"sources":["C:/Users/Daehan/Desktop/Extra Study/Udemy/map-filter-reduce/src/index.js"],"names":["emojipedia","newEmojipedia","map","emojiEntry","meaning","substring","console","log"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAMC,aAAa,GAAGD,UAAU,CAACE,GAAX,CAAe,UAASC,UAAT,EAAqB;AACxD,SAAOA,UAAU,CAACC,OAAX,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,GAAhC,CAAP;AACD,CAFqB,CAAtB;AAIAC,OAAO,CAACC,GAAR,CAAYN,aAAZ","sourcesContent":["// var numbers = [3, 56, 2, 48, 5];\n\n//Map -Create a new array by doing something with each item in an array.\n\n// function double(x) {\n//   return x * 2;\n// }\n// const newNumbers = numbers.map(double);\n\n// var newNumbers = [];\n// numbers.forEach(function (x) {\n//   newNumbers.push(x * 2);\n// });\n\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n\n// console.log(newNumbers);\n\n//Filter - Create a new array by keeping the items that return true.\n\n// const newNumbers = numbers.filter(function (num) {\n//  return num < 10\n// });\n\n// var newNumbers = [];\n// numbers.forEach(function (num) {\n//   if(num < 10) {\n//     newNumbers.push(num);\n//   }\n// });\n\n// console.log(newNumbers);\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\n// var newNumber = numbers.reduce(function (accumulator, currentNumber) {\n//   console.log(\"accumulator = \" + accumulator);\n//   console.log(\"currentNumber = \" + currentNumber);\n//   return accumulator + currentNumber;\n// });\n\n// var newNumber = 0;\n// numbers.forEach(function(currentNumber) {\n//   newNumber += currentNumber\n// });\n\n// console.log(newNumber);\n\n//Find - find the first item that matches from an array.\n\n// const newNumber = numbers.find(function (num) {\n//   return num > 10;\n// });\n\n// console.log(newNumber);\n\n//FindIndex - find the index of the first item that matches.\n\n// const newNumber = numbers.findIndex(function(num) {\n//   return num > 10;\n// });\n\n// console.log(newNumber);\n\n//Challange\nimport emojipedia from \"./emojipedia\";\n\nconst newEmojipedia = emojipedia.map(function(emojiEntry) {\n  return emojiEntry.meaning.substring(0, 100);\n});\n\nconsole.log(newEmojipedia);\n"]},"metadata":{},"sourceType":"module"}